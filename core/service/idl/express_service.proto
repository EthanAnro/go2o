syntax = "proto3";

import "global.proto";

option go_package = "./;proto";
option java_package = "com.github.go2o.rpc";

// 配送服务
service ExpressService {
  // 获取快递公司
  rpc GetExpressProvider (IdOrName) returns (SExpressProvider) {
  }
  // 保存快递公司
  rpc SaveExpressProvider (SExpressProvider) returns (Result) {
  }
  // 获取可用的快递公司
  rpc GetProviders (Empty) returns (ExpressProviderListResponse) {
  }
  // 获取可用的快递公司分组
  rpc GetProviderGroup (Empty) returns (ExpressProviderGroupResponse) {
  }

  // 保存快递模板
  rpc SaveExpressTemplate (SExpressTemplate) returns (SaveTemplateResponse) {
  }
  // 获取单个快递模板
  rpc GetTemplate (ExpressTemplateId) returns (SExpressTemplate) {
  }
  // 获取卖家的快递模板
  rpc GetTemplates (GetTemplatesRequest) returns (ExpressTemplateListResponse) {
  }
  // 删除模板
  rpc DeleteTemplate (ExpressTemplateId) returns (Result) {
  }
  // 保存地区快递模板
  rpc SaveAreaTemplate (SaveAreaExpTemplateRequest) returns (Result) {
  }
 
  // 根据地区编码获取运费模板
  //rpc GetAreaExpressTemplateByAreaCode(userId int64,
  //	templateId int32, areaCode string) *express.ExpressAreaTemplate

}

message ExpressProviderListResponse {
  repeated SExpressProvider value = 1;
}

// 快递服务商分组响应
message ExpressProviderGroupResponse{
  // 列表
  repeated SExpressProviderGroup list = 1;
}

// 快递服务商分组
message SExpressProviderGroup{
  // 分组
  string group = 1;
  // 快递列表
  repeated SMinifiyExpressProvider list = 2;
}

// 快递服务商
message SMinifiyExpressProvider {
  // 快递公司编号
  int64 id = 1;
  // 快递名称
  string name = 2;
  // 首字母，用于索引分组
  string letter = 3;
}

// 快递服务商
message SExpressProvider {
  // 快递公司编号
  int64 id = 1;
  // 快递名称
  string name = 2;
  // 首字母，用于索引分组
  string letter = 3;
  // 分组,多个组,用","隔开
  string groupFlag = 4;
  // 快递公司编码
  string code = 5;
  // 接口编码
  string apiCode = 6;
  // 是否启用
  bool enabled = 7;
}



// 快递模板
message SExpressTemplate {
  // 编号
  int64 id = 1;
  // 运营商编号
  int64 sellerId = 2;
  // 运费模板名称
  string name = 3;
  // 是否卖价承担运费
  bool isFree = 4;
  // 运费计价依据
  int32 basis = 5;
  // 首次计价单位,如首重为2kg
  int32 firstUnit = 6;
  // 首次计价单价(元),如续重1kg
  int64 firstFee = 7;
  // 超过首次计价计算单位,如续重1kg
  int32 addUnit = 8;
  // 超过首次计价单价(元)，如续重1kg
  int64 addFee = 9;
  // 是否启用
  bool enabled = 10;
  // 地区模板设置
  repeated SDistrictExpressTemplate districts = 11;
}

// 快递地区模板
message SDistrictExpressTemplate {
  // 模板编号
  int64 id = 1;
  // 地区编号列表，通常精确到省即可
  string codeList = 2;
  // 地区名称列表
  string nameList = 3;
  // 首次数值，如 首重为2kg
  int32 firstUnit = 4;
  // 首次金额，如首重10元
  int64 firstFee = 5;
  // 增加数值，如续重1kg
  int32 addUnit = 6;
  // 增加产生费用，如续重1kg 10元
  int64 addFee = 7;
}

message ExpressTemplateId {
  int64 sellerId = 1;
  int64 templateId = 2;
}
message GetTemplatesRequest {
  int64 sellerId = 1;
  // 仅返回已启用的模板
  bool onlyEnabled = 2;
}
message ExpressTemplateListResponse {
  repeated SExpressTemplate value = 1;
}



message SaveAreaExpTemplateRequest {
  int64 sellerId = 1;
  int64 templateId = 2;
  SDistrictExpressTemplate value = 3;
}

message AreaTemplateId {
  int64 sellerId = 1;
  int64 templateId = 2;
  int64 areaTemplateId = 3;
}

message SaveTemplateResponse {
  int32 errCode = 1;
  string errMsg = 2;
  int64 templateId = 3;
}