syntax = "proto3";

import "global.proto";

option go_package = "./;proto";
option java_package = "com.github.go2o.rpc";

// 产品服务
service ProductService {
    // 获取产品模型及模型的规格属性
    rpc GetProductModel (ProductModelId) returns (SProductModel) {
    }
    // 获取产品模型
    rpc GetModels (GetModelsRequest) returns (ProductModelListResponse) {
    }
    // 获取属性
    rpc GetAttr (ProductAttrId) returns (SProductAttr) {
    }
    // 获取属性项
    rpc GetAttrItem (ProductAttrItemId) returns (SProductAttrItem) {
    }

    // 保存产品模型
    rpc SaveProductModel (SaveProductModelRequest) returns (Result) {
    }
    // 删除产品模型
    rpc DeleteModel_ (ProductModelId) returns (Result) {
    }

    /***** 品牌  *****/

    // Get 产品品牌
    rpc GetBrand (Int64) returns (SProductBrand) {
    }
    // Save 产品品牌
    rpc SaveBrand (SProductBrand) returns (Result) {
    }
    // Delete 产品品牌
    rpc DeleteBrand (Int64) returns (Result) {
    }
    // 获取所有产品品牌
    rpc GetBrands (Empty) returns (ProductBrandListResponse) {
    }
    // 获取商品分类
    rpc GetCategory (GetCategoryRequest) returns (SProductCategory) {
    }
    // 获取商品分类和选项
    //    rpc GetCategoryAndOptions(mchId int64, id int32) (*product.Category,
    //    domain.IOptionStore)
    rpc DeleteCategory (Int64) returns (Result) {
    }
    // 保存产品分类
    rpc SaveCategory (SaveProductCategoryRequest) returns (SaveProductCategoryResponse) {
    }
    // 获取分类树形数据
    rpc GetCategoryTreeNode (CategoryTreeRequest) returns (CategoryTreeResponse) {
    }
    rpc FindParentCategory(CategoryIdRequest) returns(CategoriesResponse) {}
    // 分类树形
    //rpc CategoryTree(CategoryParentId)returns(SProductCategory){}
    // 获取分类关联的品牌
    //rpc GetCatBrands_(catId int32) []*promodel.ProBrand

    //rpc GetBigCategories(mchId int64) []*proto.SProductCategory
    //rpc GetChildCategories(mchId int64, parentId int64) []*proto.SProductCategory

    // 获取产品值
    rpc GetProduct (ProductId) returns (SProduct) {
    }
    // 保存产品
    rpc SaveProduct (SaveProductRequest) returns (SaveProductResponse) {
    }

    // 删除产品
    rpc DeleteProduct (DeleteProductRequest) returns (Result) {
    }
    // 保存货品描述
    rpc SaveProductInfo (ProductInfoRequest) returns (Result) {
    }
    // 获取产品属性
    //rpc GetAttrArray_(productId int64) []*product.Attr
}

message CategoryIdRequest{
    int64 categoryId = 1;
}

message DeleteProductRequest {
    int64 sellerId = 1;
    int64 productId = 2;
}
message ProductId {
    int64 value =  1;
}
message ProductModelId {
    int64 value =  1;
}
message ProductAttrId {
    int64 value =  1;
}
message ProductAttrItemId {
    int64 value =  1;
}

// 获取模型请求
message GetModelsRequest{
    // 是否仅返回已启用的模型
    bool onlyEnabled = 1;
}

message ProductModelListResponse {
    repeated SProductModel value =  1;
}

// 产品模型
message SProductModel {
    // 编号
    int64 id = 1;
    // 名称
    string name = 2;
    // 属性字符
    string attrStr = 3;
    // 规格字符
    string specStr = 4;
    // 属性
    repeated SProductAttr attrs = 5;
    // 规格
    repeated SProductSpec specs = 6;
    // 关联品牌
    repeated int64 brands = 7;
    // 是否启用
    int32 enabled = 8;
}


// 保存产品模型请求
message SaveProductModelRequest {
    // 编号
    int64 id = 1;
    // 名称
    string name = 2;
    // 关联品牌
    repeated int64 brands = 3;
    // 属性
    repeated SProductAttr attrs = 4;
    // 规格
    repeated SProductSpec specs = 5;
    // 是否更新规格和属性,为true时不更新品牌
    bool updateAttrSpec = 7;
    // 是否启用
    int32 enabled = 8;
}


// 产品模型属性
message SProductAttr {
    // 编号
    int64 id = 1;
    // 属性名称
    string name = 2;
    // 是否作为筛选条件
    int32 isFilter = 3;
    // 是否多选
    int32 multiCheck = 4;
    // 排列序号
    int32 sortNum = 5;
    // 属性项值
    string itemValues = 6;
    // 属性项
    repeated SProductAttrItem items = 7;
}

// 产品模型属性项
message SProductAttrItem {
    // 编号
    int64 id = 1;
    // 属性值
    string value =  2;
    // 排列序号
    int32 sortNum = 3;
}

// 产品属性值
message SProductAttrValue {
    // 编号
    int64 id = 1;
    // 属性编号
    int64 attrId = 2;
    // 属性名称
    string attrName = 3;
    // 属性值
    string attrData = 4;
    // 属性文本
    string attrWord = 5;
}

// 产品模型规格
message SProductSpec {
    // 编号
    int64 id = 1;
    // 规格名称
    string name = 2;
    // 排列序号
    int32 sortNum = 3;
    // 规格项值
    string itemValues = 4;
    // 规格项
    repeated SProductSpecItem items = 5;
}

// 规格项
message SProductSpecItem {
    // 编号
    int64 id = 1;
    // 规格项值
    string value =  2;
    // 规格项颜色
    string color = 3;
    // 排列序号
    int32 sortNum = 4;
}

message ProductBrandListResponse {
    repeated SProductBrand value =  1;
}

// 品牌
message SProductBrand {
    // 编号
    int64 id = 1;
    // 品牌名称
    string name = 2;
    // 品牌图片
    string image = 3;
    // 品牌网址
    string siteUrl = 4;
    // 介绍
    string introduce = 5;
    // 是否审核
    int32 reviewStatus = 6;
    // 审核意见
    string reviewRemark = 7;
    // 是否启用
    int32 enabled = 8;
    // 加入时间
    int64 createTime = 9;
}

// 商品分类
message SProductCategory {
    // 编号
    int64 id = 1;
    // 上级分类
    int64 parentId = 2;
    // 产品模型
    int64 modelId = 3;
    // 优先级
    int32 priority = 4;
    // 分类名称
    string name = 5;
    /** 是否为虚拟分类 */
    bool isVirtual = 6;
    /** 分类链接地址 */
    string categoryUrl = 7;
    // 虚拟分类跳转地址
    string redirectUrl = 18;
    /** 图标 */
    string icon = 8;
    /** 图标坐标 */
    string iconPoint = 9;
    /** 分类层级 */
    int32 level = 10;
    /** 序号 */
    int32 sortNum = 11;
    /** 是否楼层显示 */
    bool floorShow = 12;
    /** 是否启用 */
    bool enabled = 13;
    /** 创建时间 */
    int64 createTime = 14;
    /** 子分类 */
    repeated SProductCategory children = 15;
    // 关联品牌
    repeated SProductBrand brands = 16;
    // 产品模型
    SProductModel model = 17;
    // 选项参数
    map<string, string> options = 19;
}

// 保存分类请求
message SaveProductCategoryRequest{
    // 编号
    int64 id = 1;
    // 上级分类
    int64 parentId = 2;
    // 产品模型
    int64 modelId = 3;
    // 优先级
    int32 priority = 4;
    // 分类名称
    string name = 5;
    /** 是否为虚拟分类 */
    bool isVirtual = 6;
    /** 分类链接地址 */
    string categoryUrl = 7;
    // 虚拟分类跳转地址
    string redirectUrl = 18;
    /** 图标 */
    string icon = 8;
    /** 图标坐标 */
    string iconPoint = 9;
    /** 序号 */
    int32 sortNum = 11;
    /** 是否楼层显示 */
    bool floorShow = 12;
    /** 是否启用 */
    bool enabled = 13;
}

// 保存分类响应
message SaveProductCategoryResponse{
    string error = 1;
    int64 categoryId = 2;
}

// 分类树
message SCategoryTree {
    // 值
    int64 id =  1;
    // 文本
    string name = 2;
    // 图标,icon与JS树形控件冲突
    string image = 3;
    // 是否展开
    string url = 4;
    // 是否为叶子节点(下级无节点)
    bool isLeaf = 5;
    // 子节点
    repeated SCategoryTree children = 6;
    // 是否在楼层显示
    bool onFloorShow = 7;
}
// 获取分类请求
message GetCategoryRequest{
    // 编号
    int64 categoryId = 1;
    // 是否加载品牌
    bool withBrand = 2;
    // 是否加载产品模型
    bool withModel = 3;
}

// 分类树形请求
message CategoryTreeRequest {
    // 上级编号
    int64 parentId = 1;
    // 是否懒加载
    bool lazy = 2;
    // 是否仅返回已经启用的分类
    bool onlyEnabled = 3;
    // 排除分类编号
    repeated int64 excludeIdList = 4;
}


// 分类树形结果
message CategoryTreeResponse{
    repeated SCategoryTree value = 1;
}

// 分类来源响应
message CategoriesResponse{
    repeated SProductCategory list = 1;
}

// 产品
message SProduct {
    // 编号
    int64 id = 1;
    // 分类
    int64 categoryId = 2;
    // 名称
    string name = 3;
    //供应商编号(暂时同mch_id)
    int64 vendorId = 4;
    // 品牌编号
    int64 brandId = 5;
    // 商家编码
    string code = 6;
    // 图片
    string image = 7;
    // 描述
    string description = 8;
    // 备注
    string remark = 9;
    // 状态
    int32 state = 10;
    // 排序编号
    int32 sortNum = 11;
    // 产品属性
    repeated SProductAttrValue attrs = 12;
    // 创建时间
    int64 createTime = 13;
    // 更新时间
    int64 updateTime = 14;
}

// 更新产品请求
message SaveProductRequest {
    // 编号
    int64 id = 1;
    // 分类
    int64 categoryId = 2;
    // 名称
    string name = 3;
    //供应商编号(暂时同mch_id)
    int64 vendorId = 4;
    // 品牌编号
    int64 brandId = 5;
    // 商家编码
    string code = 6;
    // 图片
    string image = 7;
    // 描述
    string description = 8;
    // 备注
    string remark = 9;
    // 状态
    int32 state = 10;
    // 排序编号
    int32 sortNum = 11;
    // 产品属性
    repeated SProductAttrValue attrs = 12;
    // 创建时间
    int64 createTime = 13;
    // 更新时间
    int64 updateTime = 14;
    // 是否更新详情
    bool updateDescription = 15;
}

message ProductInfoRequest {
    int64 productId = 1;
    string info = 2;
}

message SaveProductResponse {
    int32 errCode = 1;
    string errMsg = 2;
    int64 productId = 3;
}
